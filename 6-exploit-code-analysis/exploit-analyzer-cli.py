import requests
from openai import OpenAI

from dotenv import load_dotenv
load_dotenv()	# Loads OPENAI_API_KEY environment variable from .env file

client = OpenAI()

def fetch_code_from_url(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        return response.text
    except requests.HTTPError as http_err:
        return f"HTTP error occurred: {http_err}"
    except Exception as err:
        return f"An error occurred: {err}"

def generate_snort_rule(code):
    prompt = f"Analyze the following exploit code and suggest a SNORT rule to detect it:\n\n{code}"

    try:
        response = client.chat.completions.create(model="gpt-4",  # or another model you prefer
        messages=[{"role": "system", "content": "You are an AI trained in cybersecurity."},
                  {"role": "user", "content": prompt}])
        return response.choices[0].message.content
    except Exception as err:
        return f"An error occurred: {err}"

# Main workflow
url = input("Enter the URL of the exploit code (e.g., a GitHub raw content URL): ")
code = fetch_code_from_url(url)
if code:
    print("Exploit code fetched. Analyzing and generating SNORT rule...")
    snort_rule = generate_snort_rule(code)
    print("Suggested SNORT Rule:\n", snort_rule)
else:
    print("Failed to fetch code from the URL.")
